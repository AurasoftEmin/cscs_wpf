DEFINE invoiceNumberArray, invoiceLineNumberArray type i array 1000;
DEFINE stringColumnArray type a size 50 array 1000;

DEFINE recaArray type i array 1000;
DEFINE cntrRDA, cntrWRTA type i;

//---------------

DEFINE hndl type i;

cntr = 0;

hndl = openv("invoiceLines", "DB1");

//---------------

RDA("invoiceNumber|invoiceLineNumber|stringColumn|RCNGET(hndl)", "invoiceNumberArray, invoiceLineNumberArray, stringColumnArray, recaArray", hndl, "InvoiceLine_invoiceLineNumber", "1|1", "true", "", "n 1000", "cntrRDA");

//---------------



//WRTA("customerNumberArray|customerNameArray", "customerNumber, customerName", hndl, "", 3, "", "cntr");

//fromArray = {"customerNumberArray", "customerNameArray"};
//fromArray = {57, "'stringConstant'", variable, customerNameArray, "funkcija2()", "funkcija3()"};

//fromArray = {"cntr+68", "'stringConstant10'"};


MessageBox("RDA done, changing stringColumnArray...");
for(i = 0; i < 1000 ; i++){
    stringColumnArray[i] += recaArray[i];
    //MessageBox(stringColumnArray[i]);
}
MessageBox("stringcolumn array changed");


// fromArray = {"stringColumnArray", "'2020-02-20'"};
// toArray = {"stringColumn", "dateColumn"};

fromArray = {stringColumnArray};
toArray = {"stringColumn"};


/*
function funkcija3(){
    MessageBox("FUnkcija 3");
    return "stringConstantValue";
}

function funkcija2(){
    MessageBox("FUnkcija 2");
    return cntr;
}

function funkcija(){
    MessageBox(customerNumberArray[cntr]);
    if(customerNumberArray[cntr] == 6){return true;}else{return false;}
}

//MessageBox(customerNameArray.Size);
*/

MessageBox("starting WRTA");
WRTA(fromArray, toArray, hndl, "recaArray", 1000, "", "cntrWRTA");

//WRTA(fromArray, toArray, hndl, "recaArray", 3, "customerNumberArray[cntr] != 6", "cntr");
//WRTA(fromArray, toArray, hndl, "", 3, "", "cntr");

MessageBox("WRTA done! =)");

MessageBox("cntrWRTA = " + cntrWRTA);
